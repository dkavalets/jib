plugins {
  id 'maven'
  id 'net.researchgate.release'
}

dependencies {
  implementation 'com.google.http-client:google-http-client'
  implementation 'org.apache.commons:commons-compress'
  implementation 'com.google.guava:guava'
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'org.ow2.asm:asm'

  testImplementation 'junit:junit'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.slf4j:slf4j-api'
}

jar {
  manifest {
    attributes 'Implementation-Version': version
    attributes 'Automatic-Module-Name': 'com.google.cloud.tools.jib'

    // OSGi metadata
    attributes 'Bundle-SymbolicName': 'com.google.cloud.tools.jib'
    attributes 'Bundle-Name': 'Jib library for building Docker and OCI images'
    attributes 'Bundle-Vendor': 'Google LLC'
    attributes 'Bundle-DocURL': 'https://github.com/GoogleContainerTools/jib'
    attributes 'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0'
    attributes 'Export-Package': 'com.google.cloud.tools.jib.*'
  }
}


/* RELEASE */
task writePom {
  project.afterEvaluate {
    def outputFile = file("${project.buildDir}/pom/${project.name}-${project.version}.pom")
    outputs.file outputFile

    doLast {
      pom {
        project {
          name 'Jib Core'
          description 'Build container images.'
          url 'https://github.com/GoogleContainerTools/jib'
          inceptionYear '2018'

          scm {
            url 'https://github.com/GoogleContainerTools/jib'
            connection 'scm:https://github.com/GoogleContainerTools/jib.git'
            developerConnection 'scm:git://github.com/GoogleContainerTools/jib.git'
          }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'coollog'
              name 'Qingyang Chen'
              email 'qingyangc@google.com'
            }
            developer {
              id 'loosebazooka'
              name 'Appu Goundan'
              email 'appu@google.com'
            }
            developer {
              id 'TadCordle'
              name 'Tad Cordle'
              email 'tcordle@google.com'
            }
            developer {
              id 'chanseokoh'
              name 'Chanseok Oh'
              email 'chanseok@google.com'
            }
            developer {
              id 'briandealwis'
              name 'Brian de Alwis'
              email 'bdealwis@google.com'
            }
          }
        }
      }.writeTo(outputFile)
    }
  }
}

// For Kokoro sign and releases
task prepareRelease(type: Copy) {
  from jar
  from sourceJar
  from javadocJar
  from writePom
  into "${project.buildDir}/release-artifacts"
  dependsOn build
  dependsOn cleanPrepareRelease
}
// Release plugin (git release commits and version updates)
release {
  tagTemplate = 'v$version-core'
  git {
    requireBranch = /^core_release_v\d+.*$/  //regex
  }
}
/* RELEASE */
